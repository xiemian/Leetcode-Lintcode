class Solution {
    public int findIndex(String s, int start, int index){
        for(int i = start;i < index;i++){
            if(s.charAt(index) == s.charAt(i)) return i;
        }
        return -1;
    }
    public void update(HashMap<Character,Integer> map,String s, int start,int end){
        for(int i = start;i <= end;i++){
            map.put(s.charAt(i),map.get(s.charAt(i))+1);
        }
    }
    public List<Integer> findAnagrams(String s, String p) {
        List<Integer> re = new ArrayList<>();
        if(s.length() < p.length()) return re;
        HashMap<Character,Integer> dict = new HashMap<>();
        for(char c : p.toCharArray()){
            dict.put(c,dict.getOrDefault(c, 0) + 1);
        }
        int start = 0,len = p.length();
        
        for(int i = 0;i < s.length();i++){
            if(dict.get(s.charAt(i)) != null){
                if(dict.get(s.charAt(i)) > 0)
                    dict.put(s.charAt(i),dict.get(s.charAt(i))-1);
                else{
                    int tmp  = findIndex(s,start,i) + 1;
                    update(dict,s,start,tmp-2);
                    start = tmp;
                } 
            }else{
                update(dict,s,start,i-1);
                start = i + 1;
            }
            if(i-start+1 == len) {
                re.add(start);
                dict.put(s.charAt(start),1);
                start++;
            }
        }
        return re;
    }
}
